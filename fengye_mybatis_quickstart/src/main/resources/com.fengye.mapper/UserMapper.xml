<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace表示当前mapper的唯一标识：一般使用domain的全路径名+Mapper来命名-->
<mapper namespace="com.fengye.domain.UserMapper">
    <!--id：方法表示，一般配置对应的方法；
        resultType：表示该方法有返回，返回需要封装到对应实体的类型-->
    <select id="findAll" resultType="com.fengye.domain.User">
        select * from user
    </select>

    <!--parameterType表示查询需要传入的参数信息；
        resultType表示查询返回封装的结果信息；
        #{id}：id对应实体类User中的id属性-->
    <select id="findOneById" parameterType="java.lang.Integer" resultType="com.fengye.domain.User">
        select * from user where id = #{id}
    </select>

    <insert id="insert" parameterType="com.fengye.domain.User">
        insert into user values (#{id}, #{username}, #{password})
    </insert>

    <update id="update" parameterType="com.fengye.domain.User">
        <!--注意多个修改参数之间使用","隔开，而不是用and隔开-->
        update user set username = #{username} , password = #{password}
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user where id = #{id}
    </delete>
</mapper>